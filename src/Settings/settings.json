[
    {
        "name": "Tab Width",
        "type": "int",
        "default": 4,
        "old": [
            "tab_stop"
        ],
        "param": "QVariantList {1,16}",
        "tip": "The width of the tab character, or the number of spaces of an indent"
    },
    {
        "name": "Geometry",
        "type": "QRect"
    },
    {
        "name": "Editor Font",
        "type": "QFont",
        "default": "[](){ QFont font = QFontDatabase::systemFont(QFontDatabase::FixedFont); font.setStyleHint(QFont::TypeWriter); return font; }()",
        "old": [
            "font"
        ],
        "tip": "The font of the code editor"
    },
    {
        "name": "Default Language",
        "type": "QString",
        "default": "C++",
        "ui": "QComboBox",
        "param": "QStringList {\"C++\", \"Java\", \"Python\"}",
        "tip": "The default language used when opening new tabs"
    },
    {
        "name": "Clang Format/Path",
        "desc": "Path",
        "type": "QString",
        "default": "clang-format",
        "old": [
            "clang_format_binary"
        ],
        "ui": "PathItem",
        "param": "0",
        "tip": "The path to the Clang Format executable file"
    },
    {
        "name": "Clang Format/Style",
        "desc": "Style",
        "type": "QString",
        "default": "BasedOnStyle: Google",
        "old": [
            "clang_format_style"
        ],
        "ui": "QPlainTextEdit",
        "tip": "The Clang Format style options, which are often saved in a .clang-format configuration file.\nYou can learn about it at <https://clang.llvm.org/docs/ClangFormatStyleOptions.html>."
    },
    {
        "name": "C++/Template Path",
        "type": "QString",
        "old": [
            "template_cpp"
        ],
        "ui": "PathItem",
        "param": "1",
        "tip": "The template used when creating a new C++ file"
    },
    {
        "name": "C++/Template Cursor Position Regex",
        "type": "QString",
        "default": "main\\(\\)",
        "tip": "The regular expression which matches a part of the code template.\nWhen opening a template, the position of the cursor is the position of the regex with an offset.\nThe cursor will be at the end of the template if there's no match of the regex."
    },
    {
        "name": "C++/Template Cursor Position Offset Type",
        "type": "QString",
        "default": "end",
        "ui": "QComboBox",
        "param": "QStringList {\"start\", \"end\"}",
        "tip": "Whether the offset is relative to the start of the regex or the end of the regex."
    },
    {
        "name": "C++/Template Cursor Position Offset Characters",
        "type": "int",
        "default": 4,
        "param": "QVariantList {-1000000, 1000000}",
        "tip": "The offset relative to the match of the regex in the number of characters, including white spaces."
    },
    {
        "name": "C++/Compile Command",
        "type": "QString",
        "default": "g++ -Wall",
        "old": [
            "compile_cpp"
        ],
        "tip": "The command used to compile C++. It should NOT include the path to the source file or \"-o <output file>\"."
    },
    {
        "name": "C++/Output Path",
        "desc": "C++ Executable File Path",
        "type": "QString",
        "default": "${tmpdir}/${basename}",
        "tip": "The path of the compiled executable file.\nIt's relative to the source file, or the temporary directory if the tab is untitled.\nNo \".exe\" is needed.\nYou can use \"${filename}\" for the complete file name,\n\"${basename}\" for the base file name without the suffix,\n\"${tmpdir}\" or \"${tempdir}\" for the absolute path of the temporary directory."
    },
    {
        "name": "C++/Run Arguments",
        "type": "QString",
        "old": [
            "runtime_cpp"
        ],
        "tip": "The runtime arguments when executing a C++ program"
    },
    {
        "name": "C++/Parentheses",
        "type": "QVariantList",
        "default": "QVariantList { QVariantList {'(', ')', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked}, QVariantList {'{', '}', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked}, QVariantList {'[', ']', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked}, QVariantList {'\"', '\"', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked}, QVariantList {'\\'', '\\'', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked} }"
    },
    {
        "name": "Java/Template Path",
        "type": "QString",
        "old": [
            "template_java"
        ],
        "ui": "PathItem",
        "param": "2",
        "tip": "The template used when creating a new Java file"
    },
    {
        "name": "Java/Compile Command",
        "type": "QString",
        "default": "javac",
        "old": [
            "compile_java"
        ],
        "tip": "The command used to compile Java.\nIt should NOT include the path to the source file or the path of the compiled class file."
    },
    {
        "name": "Java/Run Arguments",
        "type": "QString",
        "default": "",
        "old": [
            "runtime_java"
        ],
        "tip": "The runtime arguments when executing a Java program"
    },
    {
        "name": "Java/Run Command",
        "type": "QString",
        "default": "java",
        "old": [
            "run_java"
        ],
        "tip": "The command to start a Java program. It should NOT include \"-classpath <path> <class name>\"."
    },
    {
        "name": "Java/Class Name",
        "type": "QString",
        "default": "a",
        "tip": "The name of the non-public main class of your solution."
    },
    {
        "name": "Java/Output Path",
        "desc": "Java Class Path",
        "type": "QString",
        "default": "${tmpdir}",
        "tip": "The path of the parent directory of the compiled class file.\nIt's relative to the source file, or the temporary directory if the tab is untitled.\nYou can use \"${filename}\" for the complete file name,\n\"${basename}\" for the base file name without the suffix,\n\"${tmpdir}\" or \"${tempdir}\" for the absolute path of the temporary directory."
    },
    {
        "name": "Java/Template Cursor Position Regex",
        "type": "QString",
        "tip": "The regular expression which matches a part of the code template.\nWhen opening a template, the position of the cursor is the position of the regex with an offset.\nThe cursor will be at the end of the template if there's no match of the regex."
    },
    {
        "name": "Java/Template Cursor Position Offset Type",
        "type": "QString",
        "default": "end",
        "ui": "QComboBox",
        "param": "QStringList {\"start\", \"end\"}",
        "tip": "Whether the offset is relative to the start of the regex or the end of the regex."
    },
    {
        "name": "Java/Template Cursor Position Offset Characters",
        "type": "int",
        "param": "QVariantList {-1000000, 1000000}",
        "tip": "The offset relative to the match of the regex in the number of characters, including white spaces."
    },
    {
        "name": "Java/Parentheses",
        "type": "QVariantList",
        "default": "QVariantList { QVariantList {'(', ')', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked}, QVariantList {'{', '}', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked}, QVariantList {'[', ']', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked}, QVariantList {'\"', '\"', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked}, QVariantList {'\\'', '\\'', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked} }"
    },
    {
        "name": "Python/Template Path",
        "type": "QString",
        "old": [
            "template_python"
        ],
        "ui": "PathItem",
        "param": "3",
        "tip": "The template used when creating a new Python file"
    },
    {
        "name": "Python/Template Cursor Position Regex",
        "type": "QString",
        "tip": "The regular expression which matches a part of the code template.\nWhen opening a template, the position of the cursor is the position of the regex with an offset.\nThe cursor will be at the end of the template if there's no match of the regex."
    },
    {
        "name": "Python/Template Cursor Position Offset Type",
        "type": "QString",
        "default": "end",
        "ui": "QComboBox",
        "param": "QStringList {\"start\", \"end\"}",
        "tip": "Whether the offset is relative to the start of the regex or the end of the regex."
    },
    {
        "name": "Python/Template Cursor Position Offset Characters",
        "type": "int",
        "param": "QVariantList {-1000000, 1000000}",
        "tip": "The offset relative to the match of the regex in the number of characters, including white spaces."
    },
    {
        "name": "Python/Run Arguments",
        "type": "QString",
        "old": [
            "runtime_python"
        ],
        "tip": "The runtime arguments when executing a Python program"
    },
    {
        "name": "Python/Run Command",
        "type": "QString",
        "default": "python",
        "old": [
            "run_python"
        ],
        "tip": "The command to start a Python program. It should NOT include the path to the source file."
    },
    {
        "name": "Python/Parentheses",
        "type": "QVariantList",
        "default": "QVariantList { QVariantList {'(', ')', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked}, QVariantList {'{', '}', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked}, QVariantList {'[', ']', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked}, QVariantList {'\"', '\"', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked}, QVariantList {'\\'', '\\'', Qt::PartiallyChecked, Qt::PartiallyChecked, Qt::PartiallyChecked} }"
    },
    {
        "name": "Editor Theme",
        "type": "QString",
        "default": "Light",
        "ui": "QComboBox",
        "param": "QStringList {\"Light\", \"Dracula\", \"Monokai\", \"Solarized\", \"Solarized Dark\"}",
        "tip": "The syntax highlight theme of the code editor"
    },
    {
        "name": "Auto Complete Parentheses",
        "type": "bool",
        "default": true,
        "old": [
            "auto_parenthesis"
        ],
        "tip": "Automatically complete a pair of parentheses when typing the left element of it,\nand move out of it when typing the right element of it.\nThis can be overridden for each parenthesis in each language."
    },
    {
        "name": "Auto Remove Parentheses",
        "type": "bool",
        "default": true,
        "old": [
            "auto_remove_parentheses"
        ],
        "tip": "Automatically delete the whole pair of parentheses when deleting\nthe left element of it if the two elements are adjacent.\nThis can be overridden for each parenthesis in each language."
    },
    {
        "name": "Tab Jump Out Parentheses",
        "desc": "Jump out of a parenthesis by pressing Tab",
        "type": "bool",
        "default": true,
        "tip": "When this is enabled, you can use Tab instead of the\nclosing parenthesis to jump out of a parenthesis.\nThis can be overridden for each parenthesis in each language."
    },
    {
        "name": "Auto Indent",
        "type": "bool",
        "default": true,
        "tip": "Add an indent when entering a new line after a \"{\"."
    },
    {
        "name": "Auto Save",
        "desc": "Enable Auto Save",
        "type": "bool",
        "old": [
            "autosave"
        ],
        "tip": "Automatically save the file every 3 seconds."
    },
    {
        "name": "Wrap Text",
        "type": "bool",
        "tip": "Wrap a line into several lines if it doesn't fit into the screen."
    },
    {
        "name": "Beta",
        "desc": "Use the beta version",
        "type": "bool",
        "tip": "Check for updates marked as pre-releases, which are considered not very stable but have more features."
    },
    {
        "name": "Replace Tabs",
        "desc": "Replace tabs by spaces",
        "type": "bool",
        "tip": "Use spaces instead of a tab character."
    },
    {
        "name": "Save Tests",
        "desc": "Save Testcases on Save",
        "type": "bool",
        "tip": "Save the testcases on the disk when saving a file, and load the saved testcases when opening a file."
    },
    {
        "name": "Maximized Window",
        "type": "bool",
        "old": [
            "win_max"
        ]
    },
    {
        "name": "Check Update",
        "desc": "Check for updates on startup",
        "type": "bool",
        "default": true,
        "old": [
            "update_start_check"
        ],
        "tip": "Check whether there's a new version of CP Editor when starting CP Editor."
    },
    {
        "name": "Auto Format",
        "desc": "Format Codes on Save",
        "type": "bool",
        "old": [
            "format_on_save"
        ],
        "tip": "Use Clang Format to format the codes when saving it."
    },
    {
        "name": "Opacity",
        "type": "int",
        "default": 100,
        "param": "QVariantList {60,100}",
        "ui": "QSlider",
        "old": [
            "transparency"
        ],
        "tip": "The opacity of the main window"
    },
    {
        "name": "View Mode",
        "type": "QString",
        "default": "split"
    },
    {
        "name": "Splitter Size",
        "type": "QByteArray",
        "old": [
            "splitter_sizes"
        ]
    },
    {
        "name": "Right Splitter Size",
        "type": "QByteArray",
        "old": [
            "right_splitter_sizes"
        ]
    },
    {
        "name": "Competitive Companion/Enable",
        "desc": "Enable Competitive Companion",
        "type": "bool",
        "default": true,
        "old": [
            "competitive_use"
        ],
        "tip": "Receive data sent by Competitive Companion and load the example testcases."
    },
    {
        "name": "Competitive Companion/Connection Port",
        "desc": "Connection Port",
        "type": "int",
        "default": 10045,
        "old": [
            "connection_port"
        ],
        "param": "QVariantList {1024,49151}",
        "tip": "The port used to receive data from Competitive Companion"
    },
    {
        "name": "Competitive Companion/Open New Tab",
        "desc": "Open New Tabs",
        "type": "bool",
        "default": true,
        "old": [
            "companion_new_tab"
        ],
        "tip": "Open a new tab for each problem parsed by Competitive Companion."
    },
    {
        "name": "Hotkey/Format",
        "desc": "Format Codes",
        "type": "QString",
        "old": [
            "hotkey_format"
        ],
        "ui": "ShortcutItem"
    },
    {
        "name": "Hotkey/Kill",
        "desc": "Kill All Processes",
        "type": "QString",
        "old": [
            "hotkey_kill"
        ],
        "ui": "ShortcutItem"
    },
    {
        "name": "Hotkey/Compile Run",
        "desc": "Compile and Run",
        "type": "QString",
        "old": [
            "hotkey_compile_run"
        ],
        "ui": "ShortcutItem"
    },
    {
        "name": "Hotkey/Run",
        "desc": "Run Only",
        "type": "QString",
        "old": [
            "hotkey_run"
        ],
        "ui": "ShortcutItem"
    },
    {
        "name": "Hotkey/Compile",
        "desc": "Compile Only",
        "type": "QString",
        "old": [
            "hotkey_compile"
        ],
        "ui": "ShortcutItem"
    },
    {
        "name": "Hotkey/Change View Mode",
        "desc": "Change View Mode",
        "type": "QString",
        "old": [
            "hotkey_mode_toggle"
        ],
        "ui": "ShortcutItem"
    },
    {
        "name": "Hotkey/Snippets",
        "desc": "Use Snippets",
        "type": "QString",
        "old": [
            "hotkey_snippets"
        ],
        "ui": "ShortcutItem"
    },
    {
        "name": "Hot Exit/Enable",
        "desc": "Enable Hot Exit",
        "type": "bool",
        "default": true,
        "old": [
            "use_hot_exit"
        ],
        "tip": "Save the status of the editor when the application exits and\nload the status of the last session when the application starts.\nWhen this is enabled, you won't be asked whether to save\nthe unsaved files or not when exiting."
    },
    {
        "name": "Hot Exit/Tab Count",
        "type": "int",
        "old": [
            "number_of_tabs"
        ]
    },
    {
        "name": "Hot Exit/Current Index",
        "type": "int",
        "default": -1,
        "old": [
            "current_index"
        ]
    },
    {
        "name": "Force Close",
        "type": "bool"
    },
    {
        "name": "CF/Path",
        "desc": "Path",
        "type": "QString",
        "default": "cf",
        "old": [
            "cf_path"
        ],
        "ui": "PathItem",
        "param": "0",
        "tip": "The path to the CF Tool executable file"
    },
    {
        "name": "Save Path",
        "type": "QString"
    },
    {
        "name": "Show Compile And Run Only",
        "type": "bool",
        "old": [
            "compile_and_run_only"
        ],
        "tip": "Hide the Compile Only button and the Run Only button under the code editor in the main window."
    },
    {
        "name": "Display EOLN In Diff",
        "type": "bool",
        "tip": "Use \"¶\" to represent for the new line character in the HTML Diff Viewer."
    },
    {
        "name": "Save Faster",
        "desc": "Save Files Faster",
        "type": "bool",
        "tip": "Always use QFile instead of QSaveFile to save files.\nThis will be faster but with a little bit more risk of losing the file (with a very small possibility)."
    },
    {
        "name": "Time Limit",
        "desc": "Time Limit (ms)",
        "type": "int",
        "default": 5000,
        "param": "QVariantList {1,3600000}",
        "tip": "The time limit when executing the program.\nThe program will be killed if it doesn't terminate in the time limit."
    },
    {
        "name": "Output Length Limit",
        "type": "int",
        "default": 500000,
        "param": "QVariantList {2,1000000000}",
        "tip": "The maximum number of characters in the output of the program.\nThe program will be killed if either of its stdout or stderr is too long."
    },
    {
        "name": "Message Length Limit",
        "type": "int",
        "default": 20000,
        "param": "QVariantList {500,100000000}",
        "tip": "The maximum number of characters in each message in the top-right corner of the main window.\nThe message will be elided if it's too long."
    },
    {
        "name": "HTML Diff Viewer Length Limit",
        "type": "int",
        "default": 50000,
        "param": "QVariantList {2,100000000}",
        "tip": "The maximum number of characters in the HTML Diff Viewer.\nThe Diff Viewer will fall back to plain text if either of the output or the expected output is too long."
    },
    {
        "name": "Open File Length Limit",
        "type": "int",
        "default": 20000,
        "param": "QVariantList {2,100000000}",
        "tip": "The maximum number of characters in a source file to open.\nA source file won't be opened if it's too long."
    },
    {
        "name": "Load Test Case File Length Limit",
        "type": "int",
        "default": 500000,
        "param": "QVariantList {2,1000000000}",
        "tip": "The maximum number of characters in a testcase file to load.\nA testcase file won't be loaded if it's too long."
    },
    {
        "name": "LSP/Path C++",
        "ui": "PathItem",
        "desc": "Path to LSP executable",
        "default": "clangd",
        "type": "QString",
        "param": "0",
        "tip": "The path to the C++ Language Server executable"
    },
    {
        "name": "LSP/Path Java",
        "ui": "PathItem",
        "desc": "Path to LSP executable",
        "type": "QString",
        "param": "0",
        "tip": "The path to the Java Language Server executable"
    },
    {
        "name": "LSP/Path Python",
        "ui": "PathItem",
        "desc": "Path to LSP executable",
        "default": "python",
        "type": "QString",
        "param": "0",
        "tip": "The path to the Python Language Server executable"
    },
    {
        "name": "LSP/Use Linting C++",
        "desc": "Use Linting with Language Server",
        "type": "bool",
        "tip": "Show Error, Warning, Information and Hints in Code Editor for C++ Langauge"
    },
    {
        "name": "LSP/Use Linting Java",
        "desc": "Use Linting with Language Server",
        "type": "bool",
        "tip": "Show Error, Warning, Information and Hints in Code Editor for Java Langauge"
    },
    {
        "name": "LSP/Use Linting Python",
        "desc": "Use Linting with Language Server",
        "type": "bool",
        "tip": "Show Error, Warning, Information and Hints in Code Editor for Python Langauge"
    },
    {
        "name": "LSP/Use Autocomplete C++",
        "desc": "Use auto complete with Language Server",
        "type": "bool",
        "tip": "Use autocomplete results from Language server"
    },
    {
        "name": "LSP/Use Autocomplete Java",
        "desc": "Use auto complete with Language Server",
        "type": "bool",
        "tip": "Use autocomplete results from Language server"
    },
    {
        "name": "LSP/Use Autocomplete Python",
        "desc": "Use auto complete with Language Server",
        "type": "bool",
        "tip": "Use autocomplete results from Language server"
    },
    {
        "name": "LSP/Delay C++",
        "type": "int",
        "desc": "Delay in Linting (ms)",
        "default": 2000,
        "param": "QVariantList {10, 3600000}",
        "tip": "Delay in linting in miliseconds after last modification to code"
    },
    {
        "name": "LSP/Delay Java",
        "type": "int",
        "desc": "Delay in Linting (ms)",
        "default": 2000,
        "param": "QVariantList {10, 3600000}",
        "tip": "Delay in linting in miliseconds after last modification to code"
    },
    {
        "name": "LSP/Delay Python",
        "type": "int",
        "desc": "Delay in Linting (ms)",
        "default": 2000,
        "param": "QVariantList {10, 3600000}",
        "tip": "Delay in linting in miliseconds after last modification to code"
    },
    {
        "name": "LSP/Args C++",
        "desc": "Arguments for Language Server",
        "type": "QString",
        "tip": "Arguments to pass to Language server executable"
    },
    {
        "name": "LSP/Args Java",
        "desc": "Arguments for Language Server",
        "type": "QString",
        "tip": "Arguments to pass to Language server executable"
    },
    {
        "name": "LSP/Args Python",
        "desc": "Arguments for Language Server",
        "default": "-m pyls",
        "type": "QString",
        "tip": "Arguments to pass to Language server executable"
    },
    {
        "name": "Testcases Matching Rules",
        "type": "QVariantList",
        "default": "QVariantList { QStringList {\"(.*)\\\\.in\", \"\\\\1.ans\"}, QStringList {\"(.*)\\\\.in\", \"\\\\1.out\"}}",
        "param": "QVariantList { QStringList {QCoreApplication::translate(\"Setting\", \"Input Regex\"), QCoreApplication::translate(\"Setting\", \"The regular expression which matches the whole input file name\")}, QStringList {QCoreApplication::translate(\"Setting\", \"Answer Replace\"), QCoreApplication::translate(\"Setting\", \"The replace expression for the answer file name.\\nYou can use \\\"\\\\1\\\" for the first captured group.\")}}",
        "tip": "Pairs of regular expressions used when adding pairs of test cases from files.\nEach pair of regular expressions represents a test case."
    },
    {
        "name": "Input File Save Path",
        "type": "QString",
        "default": "./${basename}_${1-index}.in",
        "tip": "The path where the input files are saved.\nThis setting is a relative path to the source file.\nYou can use \"${filename}\" for the complete file name,\n\"${basename}\" for the base file name without the suffix,\n\"${0-index}\" for the index of the test case started from 0,\n\"${1-index}\" for the index of the test case started from 1."
    },
    {
        "name": "Answer File Save Path",
        "type": "QString",
        "default": "./${basename}_${1-index}.ans",
        "tip": "The path where the answer files are saved.\nThis setting is a relative path to the source file.\nYou can use \"${filename}\" for the complete file name,\n\"${basename}\" for the base file name without the suffix,\n\"${0-index}\" for the index of the test case started from 0,\n\"${1-index}\" for the index of the test case started from 1."
    },
    {
        "name": "Default File Paths For Problem URLs",
        "type": "QVariantList",
        "default": "QVariantList {}",
        "param": "QVariantList { QStringList { QCoreApplication::translate(\"Setting\", \"Problem URL\"), QCoreApplication::translate(\"Setting\", \"The regular expression which matches a part of the problem URL\")}, QStringList {QCoreApplication::translate(\"Setting\", \"File Path\"), QCoreApplication::translate(\"Setting\", \"The replace expression for the file path, without file name suffix.\\nYou can use \\\"\\\\1\\\" for the first captured group.\")}}",
        "tip": "The default file path used when saving a new file while the problem URL is set"
    },
    {
        "name": "Test Cases Font",
        "type": "QFont",
        "default": "[](){ QFont font = QFontDatabase::systemFont(QFontDatabase::FixedFont); font.setStyleHint(QFont::TypeWriter); return font; }()",
        "tip": "The font of test cases"
    },
    {
        "name": "Extra Bottom Margin",
        "desc": "Add extra margin at the bottom of the code editor",
        "type": "bool",
        "tip": "Add an extra margin with the height of a page at the bottom of the code editor.\nDue to technical reasons, changing the height of the margin affects the undo history."
    },
    {
        "name": "Message Logger Font",
        "type": "QFont",
        "default": "[](){ QFont font = QFontDatabase::systemFont(QFontDatabase::FixedFont); font.setStyleHint(QFont::TypeWriter); return font; }()",
        "tip": "The font of the message logger"
    },
    {
        "name": "Save File On Compilation",
        "type": "bool",
        "default": "true",
        "tip": "Save the source file when compiling it. It won't be saved if the tab is untitled."
    },
    {
        "name": "Save File On Execution",
        "type": "bool",
        "tip": "Save the source file when running it. It won't be saved if the tab is untitled."
    },
    {
        "name": "Restore Old Problem Url",
        "desc": "Restore the problem URL when opening a file",
        "type": "bool",
        "tip": "If a problem URL was set for a file, when you open\nthat file again, the problem URL will be restored."
    },
    {
        "name": "Open Old File For Old Problem Url",
        "desc": "Open the old file when parsing an old problem URL",
        "type": "bool",
        "tip": "If a problem URL was set for a file, when parsing that problem\nfrom Competitive Companion again, the old file will be opened."
    },
    {
        "name": "Locale",
        "desc": "UI Language",
        "type": "QString",
        "ui": "QComboBox",
        "default": "system",
        "param": "QStringList { \"system\", \"English\", \"简体中文\" }",
        "tip": "The language displayed in the UI.",
        "old": [
            "language"
        ]
    },
    {
        "name": "UI Style",
        "type": "QString",
        "ui": "QComboBox",
        "default": "default",
        "param": "Core::StyleManager::styleList()",
        "tip": "The style of the whole application."
    },
    {
        "name": "Run On Empty Testcase",
        "desc": "Run your codes on empty test cases",
        "type": "bool",
        "tip": "Run your code on all non-hidden test cases even if the input is empty."
    }
]
